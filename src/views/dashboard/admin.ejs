<!DOCTYPE html>
<html lang="en">

	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta name="csrf-token" content="<%= initialData.csrfToken %>">
		<title><%= title %></title>
		<script src="https://cdn.tailwindcss.com"></script>
		<style>
        /* Custom styles for admin panel */
        .admin-header { background: #1a202c; }
        .admin-sidebar { background: #2d3748; }
        .admin-badge { background: #e53e3e; }
    </style>
	</head>

	<body class="bg-gray-100">
		<div class="flex h-screen">
			<!-- Left Sidebar -->
			<nav class="w-64 admin-sidebar text-white h-screen fixed left-0">
				<div class="p-4 h-full flex flex-col">
					<h2 class="text-xl font-bold mb-6">Admin Panel</h2>

					<ul class="menu flex-1">
						<li class="mb-2">
							<a href="#users" class="block px-4 py-2 rounded bg-gray-700 hover:bg-gray-600">
								Users Management
							</a>
						</li>
						<!-- Future menu items -->
					</ul>

					<!-- Session info and logout -->
					<div class="mt-auto">
						<div class="text-xs text-gray-400 mb-2">
							Session expires in: <span id="session-timer">15:00</span>
						</div>
						<button id="logout-btn" class="w-full bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded"
						 onclick="logout()">
							Logout
						</button>
					</div>
				</div>
			</nav>

			<!-- Main Content -->
			<div class="ml-64 flex-1 flex flex-col">
				<!-- Header -->
				<header class="admin-header text-white p-4 shadow-lg">
					<div class="flex justify-between items-center">
						<h1 class="text-2xl font-bold">User Management</h1>
						<span class="admin-badge text-white px-3 py-1 rounded text-sm">Admin</span>
					</div>
				</header>

				<!-- Content Area -->
				<main class="flex-1 p-6 overflow-auto">
					<!-- Action Bar -->
					<div class="bg-white rounded-lg shadow mb-6 p-4">
						<div class="flex justify-between items-center">
							<div class="flex gap-4">
								<input type="text" id="search-input" placeholder="Search by username..."
								 class="px-4 py-2 border rounded-lg w-64">
								<select id="tag-filter" class="px-4 py-2 border rounded-lg">
									<option value="">All Tags</option>
									<% initialData.tags.forEach(tag => { %>
									<option value="<%= tag %>"><%= tag %></option>
									<% }); %>
								</select>
							</div>
							<button onclick="showCreateUserModal()"
							 class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg">
								+ Create User
							</button>
						</div>
					</div>

					<!-- Users Table -->
					<div class="bg-white rounded-lg shadow overflow-hidden">
						<table class="w-full">
							<thead class="bg-gray-50 border-b">
								<tr>
									<th
									 class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										ID
									</th>
									<th
									 class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										Username
									</th>
									<th
									 class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										Tags
									</th>
									<th
									 class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										Created At
									</th>
									<th
									 class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										Actions
									</th>
								</tr>
							</thead>
							<tbody id="users-tbody" class="bg-white divide-y divide-gray-200">
								<% initialData.users.forEach(user => { %>
								<tr>
									<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
										<%= user.id %>
									</td>
									<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
										<%= user.username %>
									</td>
									<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
										<% if (user.tags && user.tags.length > 0) { %>
										<% user.tags.forEach(tag => { %>
										<span
										 class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 mr-1">
											<%= tag %>
										</span>
										<% }); %>
										<% } else { %>
										<span class="text-gray-400">No tags</span>
										<% } %>
									</td>
									<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
										<%= new Date(user.createdAt).toLocaleDateString() %>
									</td>
									<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
										<button onclick="regenerateApiKey('<%= user.username %>')"
										 class="text-indigo-600 hover:text-indigo-900 mr-3">
											Regenerate Key
										</button>
										<button onclick="manageTags('<%= user.username %>')"
										 class="text-green-600 hover:text-green-900 mr-3">
											Manage Tags
										</button>
										<button onclick="deleteUser('<%= user.username %>')"
										 class="text-red-600 hover:text-red-900">
											Delete
										</button>
									</td>
								</tr>
								<% }); %>
							</tbody>
						</table>

						<% if (initialData.users.length === 0) { %>
						<div class="text-center py-8 text-gray-500">
							No users found. Create your first user to get started.
						</div>
						<% } %>
					</div>
				</main>
			</div>
		</div>

		<!-- JavaScript -->
		<script>
        // Session timer
        let sessionTimeout = <%= initialData.sessionTimeout %>;
        let timeRemaining = sessionTimeout;
        
        function updateSessionTimer() {
            const minutes = Math.floor(timeRemaining / 60);
            const seconds = timeRemaining % 60;
            document.getElementById('session-timer').textContent = 
                `${minutes}:${seconds.toString().padStart(2, '0')}`;
            
            if (timeRemaining > 0) {
                timeRemaining--;
                setTimeout(updateSessionTimer, 1000);
            } else {
                alert('Session expired. Please login again.');
                window.location.href = '/dashboard/admin';
            }
        }
        
        updateSessionTimer();

        // CSRF token helper
        function getCsrfToken() {
            return document.querySelector('meta[name="csrf-token"]').content;
        }

        // Logout function
        async function logout() {
            try {
                const response = await fetch('/admin/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': getCsrfToken()
                    },
                    credentials: 'same-origin'
                });
                
                if (response.ok) {
                    window.location.href = '/dashboard';
                } else {
                    alert('Logout failed. Please try again.');
                }
            } catch (error) {
                console.error('Logout error:', error);
                alert('Logout failed. Please try again.');
            }
        }

        // Placeholder functions for user actions
        function showCreateUserModal() {
            alert('Create user modal - to be implemented');
        }

        function regenerateApiKey(username) {
            if (confirm(`Regenerate API key for ${username}?`)) {
                alert(`Regenerating API key for ${username} - to be implemented`);
            }
        }

        function manageTags(username) {
            alert(`Managing tags for ${username} - to be implemented`);
        }

        function deleteUser(username) {
            if (confirm(`Are you sure you want to delete user ${username}?`)) {
                alert(`Deleting ${username} - to be implemented`);
            }
        }

        // Search functionality
        document.getElementById('search-input').addEventListener('input', (e) => {
            const searchTerm = e.target.value.toLowerCase();
            // To be implemented: Filter users table
            console.log('Searching for:', searchTerm);
        });

        // Tag filter
        document.getElementById('tag-filter').addEventListener('change', (e) => {
            const selectedTag = e.target.value;
            // To be implemented: Filter users by tag
            console.log('Filtering by tag:', selectedTag);
        });
    </script>
	</body>

</html>
