<!-- Pagination controls template -->
<div class="flex items-center justify-between">
  <div class="text-sm text-gray-400">
    Showing <%= (pagination.page - 1) * pagination.limit + 1 %> to
    <%= Math.min(pagination.page * pagination.limit, pagination.total) %>
    of <%= pagination.total %> users
  </div>
  <div class="flex gap-2">
    <% if (pagination.page > 1) { %>
    <button data-page="<%= pagination.page - 1 %>"
      class="pagination-btn px-3 py-1 bg-dark-bg border border-dark-border rounded text-gray-300 hover:bg-gray-700 transition-colors">
      Previous
    </button>
    <% } %>

    <%
		// Generate page numbers
		const generatePageNumbers = (current, total) => {
			const pages = [];
			const maxVisible = 7;

			if (total <= maxVisible) {
				for (let i = 1; i <= total; i++) {
					pages.push(i);
				}
			} else {
				pages.push(1);

				if (current > 3) {
					pages.push('...');
				}

				const start = Math.max(2, current - 1);
				const end = Math.min(total - 1, current + 1);

				for (let i = start; i <= end; i++) {
					pages.push(i);
				}

				if (current < total - 2) {
					pages.push('...');
				}

				pages.push(total);
			}

			return pages;
		};

		const pageNumbers = generatePageNumbers(pagination.page, pagination.totalPages);
		pageNumbers.forEach(p => {
			if (p === '...') { %>
    <span class="px-2 text-gray-500">...</span>
    <% } else { %>
    <button data-page="<%= p %>" class="pagination-btn px-3 py-1 <%= p === pagination.page
						? 'bg-blue-600 text-white'
						: 'bg-dark-bg border border-dark-border text-gray-300 hover:bg-gray-700' %>
					rounded transition-colors">
      <%= p %>
    </button>
    <% }
		}); %>

    <% if (pagination.page < pagination.totalPages) { %>
    <button data-page="<%= pagination.page + 1 %>"
      class="pagination-btn px-3 py-1 bg-dark-bg border border-dark-border rounded text-gray-300 hover:bg-gray-700 transition-colors">
      Next
    </button>
    <% } %>
  </div>
</div>
